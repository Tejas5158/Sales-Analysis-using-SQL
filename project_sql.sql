create database project;
use project;

select*
from sales_data;

desc sales_data;


-- Retrieve all records from the dataset.
select * from sales_data;

-- Find all unique Product_Category values.
select distinct product category
from sales_data;

-- Display the total number of orders (Order_Quantity) for each Country.
select country,count(order_quantity)
from sales_data
group by country;

-- List all products (Product) sold in the Sub_Category “Accessories.”
select Product
from sales_data
where Sub_Category='Accessories';

-- Count the revenue generated by (Customer_Age) in each Age_Group.
select age_group,count(revenue)
from sales_data
group by Age_Group;

-- Find the total Revenue generated in the year 2013.
select sum(revenue)
from sales_data
where year=2013;

-- List all states where Customer_Gender is "Female."
select state
from sales_data
where Customer_Gender='f';

-- Retrieve products (Product) that have a Unit_Price greater than 100.
select product
from sales_data
where Unit_Price>=100;

-- Count the total number of orders_quantity in each Month.
select month,count(order_quantity)
from sales_data
group by month;

-- List all products along with their Profit and Revenue sorted by Profit in descending order.
select product,profit,revenue
from sales_data
order by profit desc;

-- Calculate the average Unit_Price for each Product_Category.
select product_category,avg(unit_price)
from sales_data
group by Product_Category;

-- Find the maximum and minimum Profit for each Country.
select country,max(profit),min(profit)
from sales_data
group by Country;

-- Display the total Revenue, Cost, and Profit grouped by Year.
select year,sum(revenue),sum(cost),sum(profit)
from sales_data
group by year;

-- calculate the total Cost for each Sub_Category.
select sub_category,sum(cost)
from sales_data
group by Sub_Category;

-- Find the average Customer_Age for customers grouped by Age_Group.
select age_group,avg(customer_age)
from sales_data
group by Age_Group;

-- Retrieve all records where Revenue is greater than 500 and Profit is greater than 1000.
select *
from sales_data
where Revenue>500 and Profit>1000;


-- List all product_category in the State of “California” during the year 2012.
select Product_Category
from sales_data
where state='california' and year=2012;

-- Find all products that have a Unit_Cost less than 50 and belong to the Product_Category "Accessories."
select product
from sales_data
where Unit_Cost<50 and Product_Category='Accessories';

-- Retrieve records for customers aged between 25 and 35.
select *
from sales_data
where Customer_Age between 25 and 35;

-- Find all states where Profit is negative.
select state
from sales_data
where Profit<0;

-- Display the top 5 states with the highest total Revenue.
select state,sum(revenue)
from sales_data
group by state
order by sum(revenue) desc
limit 5;

-- Find the 3 most profitable products in each Product_Category.
select product,product_category,sum(profit)
from sales_data
group by Product,Product_Category
order by sum(profit) desc
limit 3;

-- Sort the dataset by Revenue in descending order, and list the top 10 records.
select revenue
from sales_data
order by revenue desc
limit 10;

-- Retrieve the least profitable Sub_Category in each Country.
select country,sub_category,min(profit)
from sales_data
group by Country,Sub_Category;

-- Find all products whose Revenue is greater than the average Revenue across all products.
select Product, Revenue
from sales_data
where Revenue > (select avg(Revenue) from sales_data);

-- Retrieve the Product with the highest Profit in each Sub_Category.
select sub_category, Product, max(Profit) as MaxProfit
from sales_data
group by Sub_Category,product;

-- Calculate the total Revenue for each Day of the week (Day column).
select day, sum(revenue) as TotalRevenue
from sales_data
group by day
order by day ASC;

-- Retrieve all records for orders placed in December (Month = "December").
select *
from sales_data
where month = 'December';

